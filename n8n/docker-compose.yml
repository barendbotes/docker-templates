version: '3.8'
networks:
  proxy:
    external: true
  backend_postgres:
    external: true
  backend:

volumes:
  n8n-data:
  n8n-files:
  n8n-redis:

x-shared: &shared
  environment:
    - DOMAIN_NAME=domain.com
    - SUBDOMAIN=automate
    - NODE_FUNCTION_ALLOW_BUILTIN=*
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres.docker
    - DB_POSTGRESDB_DATABASE=${DB_POSTGRESDB_DATABASE}
    - DB_POSTGRESDB_USER=${DB_POSTGRESDB_USER}
    - DB_POSTGRESDB_PASSWORD=${DB_POSTGRESDB_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_DEFAULT_BINARY_DATA_MODE=filesystem
    - EXECUTIONS_DATA_PRUNE=true
    - EXECUTIONS_DATA_MAX_AGE=168
    - N8N_HOST=${URL}
    - N8N_PORT=${PORT}
    - N8N_PROTOCOL=https
    - NODE_ENV=production
    - WEBHOOK_URL=https://${URL}/
    - VUE_APP_URL_BASE_API=http://n8n:5678/
    - WEBHOOK_TUNNEL_URL=https://${URL}/
    - GENERIC_TIMEZONE=Africa/Johannesburg
    - N8N_EMAIL_MODE=smtp
    - N8N_SMTP_HOST=smtp.office365.com
    - N8N_SMTP_PORT=587
    - N8N_SMTP_USER=noreply@domain
    - N8N_SMTP_PASS=${N8N_SMTP_PASS}
    - N8N_SMTP_SENDER=noreply@domain
    - N8N_SMTP_SSL=false
    - N8N_EDITOR_BASE_URL=https://${URL}/
    - N8N_ENCRYPTION_KEY=<random-alphanumeric-64-string>
  networks:
    - proxy
    - backend_postgres
    - backend
  volumes:
    - n8n-data:/home/node/.n8n
    - n8n-files:/files
  restart: unless-stopped

services:
  redis:
    image: redis:6-alpine
    volumes:
      - n8n-redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend

  n8n:
    <<: *shared
    image: n8nio/n8n
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
      - traefik.http.routers.${SERVICE}.entrypoints=https
      - traefik.http.routers.${SERVICE}.rule=Host(`${URL}`)
      - traefik.http.services.${SERVICE}-service.loadbalancer.server.port=${PORT}
      - traefik.http.services.${SERVICE}-service.loadbalancer.server.scheme=${SCHEME}
      - traefik.http.routers.${SERVICE}.tls=true
      - traefik.http.routers.${SERVICE}.middlewares=local-chain@file

  n8n-worker:
    <<: *shared
    image: n8nio/n8n
    command: /bin/sh -c "sleep 5; n8n worker"