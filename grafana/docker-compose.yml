version: "3.5"
networks:
  proxy:
    external: true
  backend_sql:
    external: true

services:
  grafana:
    image: grafana/grafana:latest
    user: "1000"
    environment:
      TZ: Africa/Johannesburg
      GF_INSTALL_PLUGINS: marcusolsson-csv-datasource,agenty-flowcharting-panel,alexanderzobnin-zabbix-app,volkovlabs-rss-datasource
      GF_SERVER_DOMAIN: ${URL}
      GF_SERVER_ROOT_URL: https://${URL}
      GF_PLUGIN_ALLOW_LOCAL_MODE: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_SECURITY_ALLOW_EMBEDDING: true
      GF_DEFAULT_INSTANCE_NAME: grafana
      # GF_AUTH_AZUREAD_NAME: Azure AD
      # GF_AUTH_AZUREAD_ENABLED: true
      # GF_AUTH_AZUREAD_ALLOW_SIGN_UP: true
      # GF_AUTH_AZUREAD_CLIENT_ID: <client-id>
      # GF_AUTH_AZUREAD_CLIENT_SECRET: <client-secret>
      # GF_AUTH_AZUREAD_SCOPES: openid email profile
      # GF_AUTH_AZUREAD_AUTH_URL: https://login.microsoftonline.com/<org-id>/oauth2/v2.0/authorize
      # GF_AUTH_AZUREAD_TOKEN_URL: https://login.microsoftonline.com/<org-id>/oauth2/v2.0/token
      # GF_AUTH_AZUREAD_ALLOWED_DOMAINS: domain.com
      GF_AUTH_GENERIC_OAUTH_ENABLED: true
      GF_AUTH_GENERIC_OAUTH_NAME: Authelia
      GF_AUTH_GENERIC_OAUTH_CLIENT_ID: grafana
      GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET: <client-secret>
      GF_AUTH_GENERIC_OAUTH_SCOPES: openid profile email groups
      GF_AUTH_GENERIC_OAUTH_EMPTY_SCOPES: false
      GF_AUTH_GENERIC_OAUTH_AUTH_URL: https://login.auth.domain.com/api/oidc/authorization
      GF_AUTH_GENERIC_OAUTH_TOKEN_URL: https://login.auth.domain.com/api/oidc/token
      GF_AUTH_GENERIC_OAUTH_API_URL: https://login.auth.domain.com/api/oidc/userinfo
      GF_AUTH_GENERIC_OAUTH_LOGIN_ATTRIBUTE_PATH: preferred_username
      GF_AUTH_GENERIC_OAUTH_GROUPS_ATTRIBUTE_PATH: groups
      GF_AUTH_GENERIC_OAUTH_NAME_ATTRIBUTE_PATH: name
      GF_AUTH_GENERIC_OAUTH_USE_PKCE: true
      GF_AUTH_GENERIC_OAUTH_ALLOW_ASSIGN_GRAFANA_ADMIN: true
      GF_AUTH_GENERIC_OAUTH_ROLE_ATTRIBUTE_PATH: contains(groups[*], 'admins') && 'GrafanaAdmin'
    volumes:
    - grafana-data:/var/lib/grafana
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.${SERVICE}.entrypoints=https"
      - "traefik.http.routers.${SERVICE}.rule=Host(`${URL}`)"
      - "traefik.http.services.${SERVICE}-service.loadbalancer.passhostheader=true"
      - "traefik.http.services.${SERVICE}-service.loadbalancer.server.port=${PORT}"
      - "traefik.http.services.${SERVICE}-service.loadbalancer.server.scheme=${SCHEME}"
      - "traefik.http.routers.${SERVICE}.tls=true"
      - "traefik.http.routers.${SERVICE}.middlewares=secured-chain@file"
    networks:
      proxy:
        aliases:
          - grafana.cloud.instance01
      backend_sql:
volumes:
  grafana-data: